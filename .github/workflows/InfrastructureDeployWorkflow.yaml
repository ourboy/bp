# Reusable workflow to create Resource Group and WebApp
name: Infrastructure Provision Test

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      run_jobs: #List of jobs to run, defaults to running all jobs if not specified
        required: true
        type: string
      resourceGroupName:
        required: true
        type: string
      pipelineStage:
        required: true
        type: string
      armParameterFile:
        required: true
        type: string
      appServicePlanName:
        required: true
        type: string
      webAppName:
        required: true
        type: string

env:
  TemplateFile: azureWebAppProvisioning/webAppTemplete.json # Path to the ARM deployment template file
  region: "UK South" # The Azure region where the resources will be deployed

jobs:
  provision: # Job to provision the resource group and web app
    if: contains(inputs.run_jobs, 'provision')
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Log in to Azure
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Create the resource group
    - name: Provision Resource Group
      run: |
        az group create --name ${{ inputs.resourceGroupName }}ca1 --location "${{env.region}}"

    # Deploy the ARM template to the provisioned resource group
    - name: Deploy ARM Template
      uses: azure/arm-deploy@v2
      with:
        resourceGroupName: ${{ inputs.resourceGroupName }}ca1
        template: ${{ env.TemplateFile }}
        parameters:  ${{ inputs.armParameterFile }}
        region:  ${{env.region}}
        deploymentMode: Incremental

    # Download the publish profile for the web app
    - name: Download Publish Profile
      run: |
        az webapp deployment list-publishing-profiles \
          --name ${{ inputs.webAppName }} \
          --resource-group ${{ inputs.resourceGroupName }}ca1 \
          --subscription ${{ secrets.INFRA_AZURE_SUBSCRIPTION_ID }} > ${{ inputs.pipelineStage}}-profile.json
    
    # Upload the publish profile artifact for later use
    - name: Upload Publish Profile as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.pipelineStage}}-publish-profile # Name of the artifact
        path: ${{ inputs.pipelineStage}}-profile.json # Path to the publish profile file to be uploaded

  
  verify-profile: # Job to verify the publish profile
    # Run this job only if 'verify-profile' is listed in 'run_jobs' and after the 'provision' job has completed
    if: contains(inputs.run_jobs, 'verify-profile')
    needs: provision
    runs-on: ubuntu-24.04
    steps:
      # Download Publish Profile Artifact
      - name: Download Publish Profile Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.pipelineStage}}-publish-profile
          path: .

      # Verify that the publish profile is valid and non-empty
      - name: Verify Publish Profile Usability
        run: |
          PROFILE_CONTENT=$(cat ${{ inputs.pipelineStage}}-profile.json)
          if [ -z "$PROFILE_CONTENT" ]; then
            echo "Publish profile is empty or invalid."
            exit 1
          fi
          echo "Publish profile successfully retrieved and is not empty."
  
  delete-created-resources: # Job to delete the created resource group and all associated resources
    # Run this job only if 'delete-created-resources' is listed in 'run_jobs'
    if: contains(inputs.run_jobs, 'delete-created-resources')
    # needs: verify-profile
    runs-on: ubuntu-24.04
    steps:
      # Azure Login
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Delete the resource group and all its resources
      - name: Delete Resource Group
        run: |
          az group delete --name ${{ inputs.resourceGroupName }}ca1 -y --no-wait
          echo "Resource group deletion initiated."
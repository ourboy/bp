name: Infrastructure Provision Test

on:
  # workflow_run:
  #   workflows: ["deploy.yaml"]
  #   types:
  #     - requested
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        required: true
      INFRA_AZURE_SUBSCRIPTION_ID:
        required: true
    inputs:
      branch:
        required: true
        type: string
      run_jobs:
        required: false
        type: string
      resourceGroupName:
        required: true
        type: string
      subscriptionId:
        required: true
        type: string
env:
  TemplateFile: azureWebAppProvisioning/webAppTemplete.json
  ParameterFile: azureWebAppProvisioning/infraTestTemplete.parameters.json
  # resourceGroupName: infraTest
  region: "UK South"

jobs:
  provision:
    if: contains(inputs.run_jobs, 'provision')
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Log in to Azure
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Create Dev Resource Group
    - name: Provision Resource Group
      run: |
        az group create --name ${{ inputs.resourceGroupName }}ca1 --location "${{env.region}}"

    # Deploy Dev Template
    - name: Deploy ARM Template
      uses: azure/arm-deploy@v2
      with:
        resourceGroupName: ${{ inputs.resourceGroupName }}ca1
        template: ${{ env.TemplateFile }}
        parameters:  ${{ env.ParameterFile }}
        region:  ${{env.region}}
        deploymentMode: Incremental

    # Download Publish Profile Artifact from 
    - name: Download Publish Profile
      run: |
        az webapp deployment list-publishing-profiles \
          --name infraTestbp \
          --resource-group ${{ inputs.resourceGroupName }}ca1 \
          --subscription ${{ inputs.subscriptionId }} > dev-profile.json
    
    # Upload Publish Profile Artifact
    - name: Upload Publish Profile as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: publish-profile
        path: dev-profile.json
  
  verify-profile:
    if: contains(inputs.run_jobs, 'verify-profile')
    needs: provision
    runs-on: ubuntu-24.04
    steps:
      # Download Publish Profile Artifact
      - name: Download Publish Profile Artifact
        uses: actions/download-artifact@v4
        with:
          name: publish-profile
          path: .

      # Verify Publish Profile
      - name: Verify Publish Profile Usability
        run: |
          PROFILE_CONTENT=$(cat dev-profile.json)
          if [ -z "$PROFILE_CONTENT" ]; then
            echo "Publish profile is empty or invalid."
            exit 1
          fi
          echo "Publish profile successfully retrieved and is not empty."
  
  delete-created-resources:
    if: contains(inputs.run_jobs, 'delete-created-resources')
    # needs: verify-profile
    runs-on: ubuntu-24.04
    steps:
      # Azure Login
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Delete Resource Group and all resource
      - name: Delete Resource Group
        run: |
          az group delete --name ${{ inputs.resourceGroupName }}ca1 -y --no-wait
          echo "Resource group deletion initiated."
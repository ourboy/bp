name: Build and Test BP Calculator

on:
  push:
    branches:
      # - master
      - '*'  # Run on all Branches  
  pull_request:
    branches:
        - '*'
# on:
#   push:
#     branches:
#       - main
#       - develop/*
#       - 'release/*'
jobs:
  test_infra:
    name: Test Infrastructure Deployment
    uses: ./.github/workflows/InfrastructureDeployWorkflow.yaml
    with:
      branch: update-gitactions
      run_jobs: |
        provision
        verify-profile
        delete-created-resources
      resourceGroupName: infraTest
      pipelineStage: infraVerification
    secrets: inherit
  
  deploy-dev:
    name: Build and run unit tests
    uses: ./.github/workflows/development.yml
    with:
      branch: update-gitactions
      run_jobs: |
        build_and_unit_test
        sonar_code_scan
        bpBDD_tests
      resourceGroupName: development
      pipelineStage: devVerification
    secrets: inherit

  # deploy:
  #   name: Deploy to Azure Web App
  #   runs-on: ubuntu-latest
  #   needs: build_and_unit_test  # Ensures deployment runs only if build and tests pass
  #   environment:
  #     name: Test
  #     url: test-bpcalculator.azurewebsites.net
  #   env: 
  #     AZURE_WEBAPP_NAME: test-bpcalculator
  #     AZURE_WEBAPP_PACKAGE_PATH: 'publish'
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     # publish web app 
  #     - name: Publish web app
  #       run: dotnet publish -c Release -o ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp
      
  #     # Deploy to Azure app service
  #     - name: Run Azure webapp deploy action using publish profile credentials
  #       uses: azure/webapps-deploy@v2
  #       with: 
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}                            
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         # slot-name: staging TODO-Remove: Not available on free accounts
  #         package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
      
  #     # Log in to Azure
  #     - name: Log in to Azure
  #       uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  # playwright_tests:
  #   name: Run Playwright Tests
  #   runs-on: ubuntu-latest
  #   needs: deploy # Ensures tests run only after deployment completes successfully
  #   steps: 
  #     - uses: actions/checkout@v4

  #     # Run Playwright end to end tests
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '22'

  #     # Install dependencies and Playwright
  #     - name: Install dependencies and Playwright
  #       run: |
  #         npm ci
  #         npx playwright install --with-deps
      
  #     # Run Playwright tests
  #     - name: Run Playwright tests
  #       run: |
  #         npx playwright test
  #       env:
  #         BASE_URL: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
  #     # Upload Playwright report
  #     - uses: actions/upload-artifact@v4
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30
    
  #     # Log in to Azure
  #     - name: Log in to Azure
  #       uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  # performance_tests:
  #   name: k6 Performance tests
  #   runs-on: ubuntu-latest
  #   needs: playwright_tests
  #   steps:
  #     - uses: actions/checkout@v4

  #     # Pull Docker image for k6
  #     - name: Pull Docker image for k6
  #       run: docker pull grafana/k6
  
  #     # Run k6 Latency test and capture report
  #     - name: Run k6 load test, capture report
  #       run: docker run -v $GITHUB_WORKSPACE:/mnt/k6 -i grafana/k6 run /mnt/k6/bpK6Performance/latencyTest.js > k6LatencyReport.txt

  #     # Run k6 concurrency test and capture report
  #     - name: Run k6 concurrency test, capture report
  #       run: docker run -v $GITHUB_WORKSPACE:/mnt/k6 -i grafana/k6 run /mnt/k6/bpK6Performance/concurrencyTest.js > k6ConcurrencyReport.txt
      
  #     # Run k6 stress test and capture report
  #     - name: Run k6 stress test, capture report
  #       run: docker run -v $GITHUB_WORKSPACE:/mnt/k6 -i grafana/k6 run /mnt/k6/bpK6Performance/stressTest.js > k6StressReport.txt

  #     # Run k6 throughput test and capture report
  #     - name: Run k6 throughput test, capture report
  #       run: docker run -v $GITHUB_WORKSPACE:/mnt/k6 -i grafana/k6 run /mnt/k6/bpK6Performance/throughputTest.js > k6ThroughputReport.txt
  
  #      # Upload k6 report  
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: k6report
  #         path: | 
  #           k6LatencyReport.txt
  #           k6ConcurrencyReport.txt
  #           k6StressReport.txt
  #           k6ThroughputReport.txt
  #         retention-days: 30
          
  # pentesting:
  #   name: OWASP Pen testing
  #   runs-on: ubuntu-latest
  #   needs: performance_tests
  #   env:
  #     TARGET_URL: https://test-bpcalculator.azurewebsites.net/
  #   steps:
  #   - name: Pull Docker image for ZAP
  #     run: docker pull zaproxy/zap-weekly

  #   - name: Run baseline scan
  #     run: docker run -v /report:/zap/wrk/:rw --user root -t zaproxy/zap-weekly zap-baseline.py -t $TARGET_URL -I -r zapreport.html
  
  #   - uses: actions/upload-artifact@v4
  #     name: upload ZAP report
  #     with:
  #       name: ZAPreport
  #       path: /report/zapreport.html
  #       retention-days: 30

